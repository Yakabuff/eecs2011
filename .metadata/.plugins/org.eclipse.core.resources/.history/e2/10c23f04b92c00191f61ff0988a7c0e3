import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Random;

public class SkipList<E> implements List<E> {
	

	
	private static class Node<E> {
		
		public static String negInf = "-oo";
		public static String posInf = "+oo";
		

		E value;
		int width;

		private Node<E> up;
		private Node<E> down;
		
		Node<E> next;
		Node<E> prev;
		
		public Node(E value ) {
			this.value = value;
			this.width = 0;	
		}
		
		void setNext(Node<E> next) {
			this.next = next;
		}
		
		Node<E> getNext(){
			return this.getNext();
		}
		
		void setPrev(Node<E> prev) {
			this.prev = prev;
		}
		
		Node<E> getPrev(){
			return this.prev;
		}
		
		
	}
	////////////////////////////
	private Node<E> head = null;
	private Node<E> tail = null;
	
	int size;
	int levels;
	
	
	Random r;
	
	public SkipList() {
		
		//Node[] levels = new Node[1];
		
		head = new Node(null); //first element of the top level
		tail = new Node(null); //last element of the top level
		
		head.setNext(tail);
		
		tail.setPrev(head);
		
		//levels[0] = head;
		
		size = 0;
		currLevel = 0;
		
	}
	
	//add node and keep flipping coin to determine how many high u need it
	@Override
	public boolean add(E e) {
		
		size++;
		boolean added = false;
		Node newNode = (Node) e;
		
		int levels = getLevels();
		
		//check if key exists

		
		
		return false;
	}
	

	void newLevel() {
		head = new Node(null); //first element of the top level
		tail = new Node(null); //last element of the top level
		
		head.setNext(tail);
		
		tail.setPrev(head);
		
	}
	
	// get number of levels
	int getLevels() {
		int levels = 0;
		boolean end = false;
		
		while(!end) {
			if(this.head.up == null) {
				end = true;
			}else {
				levels++;
			}
		}
		
		return levels;
		
	}
	
	//insert node at n index
	@Override
	public void add(int index, E e) {
		// TODO Auto-generated method
				
	}
	
	
	@Override
	public E get(int index) {
		// TODO Auto-generated method stub
		
		int levels = getLevels();
		
		Node node = this.head;
		
		int i = i+1; // dont count head
		
		for(int i = 0; i< levels; i++) { //while step is bigger than next step
			while(i >= node.getNext().width - node.width) {  //(next node value - your current node value)
				i = i - node.getNext().width;
				node = node.getNext();
			}
		}
		
		return null;
	}
	
	@Override
	public int size() {
		// TODO Auto-generated method stub
		
		return size;
	}
	
	@Override
	public String toString() {
		String s = "";
		
		return s;
	}
	
///////////////////////////////////////////////
	@Override
	public boolean addAll(Collection arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addAll(int arg0, Collection arg1) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean contains(Object arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean containsAll(Collection arg0) {
		// TODO Auto-generated method stub
		return false;
	}



	@Override
	public int indexOf(Object arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Iterator iterator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int lastIndexOf(Object arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public ListIterator listIterator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ListIterator listIterator(int arg0) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean remove(Object arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public E remove(int arg0) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean removeAll(Collection arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean retainAll(Collection arg0) {
		// TODO Auto-generated method stub
		return false;
	}




	@Override
	public List subList(int arg0, int arg1) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object[] toArray() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object[] toArray(Object[] arg0) {
		// TODO Auto-generated method stub
		return null;
	}


	@Override
	public E set(int index, E element) {
		// TODO Auto-generated method stub
		return null;
	}

}
